{% assign pollen_chart_id = "pollen-gauge-" | append_random %}
{% assign aqi_chart_id = "aqi-gauge-" | append_random %}

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-more.js"></script>
<script src="https://code.highcharts.com/modules/pattern-fill.js"></script>

<script>
  function createGauge(containerId, value, maxValue, label) {
    Highcharts.chart(containerId, {
      chart: {
        type: "gauge",
        height: 140,
        animation: false
      },
      title: {
        text: null
      },
      pane: {
        startAngle: -150,
        endAngle: 150,
        background: {
          backgroundColor: "transparent",
          borderWidth: 0
        }
      },
      plotOptions: {
        gauge: {
          animation: false,
          pivot: {
            backgroundColor: "transparent"
          },
          dial: {
            backgroundColor: "transparent",
            baseWidth: 0,
          },
        }
      },
      yAxis: {
        min: 0,
        max: maxValue,
        minorTickInterval: 0,
        tickColor: "#ffffff",
        tickLength: 40,
        tickPixelInterval: 40,
        tickWidth: 0,
        lineWidth: 0,
        title: {
          text: null
        },
        labels: {
          enabled: false
        },
        plotBands: [{
          from: 0,
          to: value,
          color: {
            pattern: {
              image: "https://usetrmnl.com/images/grayscale/gray-2.png",
              width: 12,
              height: 12
            }
          },
          innerRadius: "82%",
          borderRadius: "50%"
        }, {
          from: value,
          to: maxValue,
          color: {
            pattern: {
              image: "https://usetrmnl.com/images/grayscale/gray-5.png",
              width: 12,
              height: 12
            }
          },
          innerRadius: "82%",
          borderRadius: "50%",
        }]
      },
      series: [{
        name: label,
        data: [value],
        dataLabels: {
          borderWidth: 0,
          style: {
            fontSize: "1.8em",
            fontWeight: "600",
            color: "#000000"
          }
        }
      }],
      credits: {
        enabled: false
      }
    });
  }

  document.addEventListener('DOMContentLoaded', function() {
    const data = {
      features: {{ features | json }}
    };

    // Sort by ReportDateTime in descending order
    data.features.sort((a, b) => new Date(b.properties.ReportDateTime) - new Date(a.properties.ReportDateTime));

    if (data.features && data.features.length > 0) {
      const todaysMetrics = data.features[0];

      // Create gauges
      createGauge(
        "{{ pollen_chart_id }}",
        Number(todaysMetrics.properties?.PollenCount) || 0,
        12,
        "Pollen"
      );
      createGauge(
        "{{ aqi_chart_id }}",
        Number(todaysMetrics.properties?.AQI) || 0,
        500,
        "AQI"
      );
    }

    window.pollen = data.features;
  });
</script>
